facet_grid(Gender ~ Sport) +
scale_y_continuous("Pontuação total\n") +
scale_x_date("\nEncontro") +
ggtitle("Pontuações totais para equipes esportivas")
ggplotly(plot)
plot <- ggplot(plot_df, aes(x = ScoringDate, y = totalScore, color = YearCode)) +
geom_line() +
facet_grid(Gender ~ Sport) +
scale_y_continuous("Pontuação total (totalScore)\n") +
scale_x_date("\nEncontro (ScoringDate)") +
scale_color_discrete(name="Ano (YearCode)") +
ggtitle("Pontuações totais para equipes esportivas")
ggplotly(plot)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dbplyr)
library(DT)
library(glue)
library(DBI)
library(ggplot2)
library(plotly)
library(scales)
library(lubridate)
library(readr)
# connections
con <- dbConnect(RSQLite::SQLite(), "../aminga_data.sqlite")
# data
df <- tbl(con, "scoringDailyPT") %>%
dplyr::collect() %>%
mutate(
position1 = ifelse(is.na(position1), 0, position1),
position2 = ifelse(is.na(position2), 0, position2)
) %>%
mutate(score = position1 + position2) %>%
dplyr::select(pk_scoring, Name, Sport, YearCode, Gender, ScoringDate, score) %>%
group_by(Name) %>%
arrange(desc(ScoringDate), .by_group = TRUE) %>%
mutate(
lastScore = lag(score, 1),
improveScore = ifelse((score >= lastScore) & (score > 0), 1, 0)
) %>%
ungroup %>%
mutate(
ScoringDate = ymd(ScoringDate),
YearCode = factor(YearCode)
)
# close connection
dbDisconnect(con)
plot_df <- df %>%
group_by(Sport, YearCode, Gender, ScoringDate) %>%
summarise(
totalScore = sum(score, na.rm = TRUE),
totalImproveScore = sum(improveScore, na.rm = TRUE)
) %>%
ungroup()
plot <- ggplot(plot_df, aes(x = ScoringDate, y = totalScore, color = YearCode)) +
geom_line() +
facet_grid(Gender ~ Sport) +
scale_y_continuous("Pontuação total (totalScore)\n") +
scale_x_date("\nEncontro (ScoringDate)") +
scale_color_discrete(name="Ano (YearCode)") +
ggtitle("Pontuações totais para equipes esportivas")
ggplotly(plot)
plot_improve <- ggplot(plot_df, aes(x = ScoringDate, y = totalImproveScore, color = YearCode)) +
geom_line() +
facet_grid(Gender ~ Sport) +
scale_y_continuous("Melhorar a pontuação total (totalImproveScore)\n") +
scale_x_date("\nEncontro (ScoringDate)") +
scale_color_discrete(name="Ano (YearCode)") +
ggtitle("Total Melhorar Pontuação por equipe esportiva")
ggplotly(plot_improve)
source("~/AMINGA/ScoringAnalysis/update_dashboards.R", echo=TRUE)
source("~/AMINGA/ScoringAnalysis/update_dashboards.R", echo=TRUE)
source("~/AMINGA/ScoringAnalysis/update_dashboards.R", echo=TRUE)
getwd()
library(here)
library(here)
source("~/AMINGA/ScoringAnalysis/update_dashboards.R", echo=TRUE)
source("~/AMINGA/ScoringAnalysis/update_dashboards.R", echo=TRUE)
source("~/AMINGA/ScoringAnalysis/update_dashboards.R", echo=TRUE)
for (f in files) rmarkdown::render(f)
library(flexdashboard)
library(tidyverse)
library(dbplyr)
library(crosstalk)
library(flexdashboard)
library(DT)
library(htmlwidgets)
library(glue)
library(DBI)
library(lubridate)
# connections
con <- dbConnect(RSQLite::SQLite(), "../aminga_data.sqlite")
# data
df <- tbl(con, "scoringDailyPT") %>%
dplyr::collect() %>%
filter(Sport == params$Sport, YearCode == params$YearCode, Gender == params$Gender) %>%
mutate(
position1 = ifelse(is.na(position1), 0, position1),
position2 = ifelse(is.na(position2), 0, position2)
) %>%
mutate(score = position1 + position2) %>%
dplyr::select(pk_scoring, Name, Sport, YearCode, Gender, ScoringDate, score) %>%
mutate(ScoringDate = ymd(ScoringDate))
# close connection
dbDisconnect(con)
# shared data
df_shared <- SharedData$new(df)
cat('\n#', glue("Class: {params$Sport} {params$YearCode} {params$Gender}"), "\n")
filter_select("student_name", "escolha seu nome", df_shared, ~Name)
df_shared
df
source("~/AMINGA/ScoringAnalysis/update_dashboards.R", echo=TRUE)
options(dplyr.summarise.inform = FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dbplyr)
library(DT)
library(glue)
library(DBI)
library(ggplot2)
library(plotly)
library(scales)
library(lubridate)
library(readr)
# connections
con <- dbConnect(RSQLite::SQLite(), "../aminga_data.sqlite")
# data
df <- tbl(con, "scoringDailyPT") %>%
dplyr::collect() %>%
mutate(
position1 = ifelse(is.na(position1), 0, position1),
position2 = ifelse(is.na(position2), 0, position2)
) %>%
mutate(score = position1 + position2) %>%
dplyr::select(pk_scoring, Name, Sport, YearCode, Gender, ScoringDate, score) %>%
group_by(Name) %>%
arrange(desc(ScoringDate), .by_group = TRUE) %>%
mutate(
lastScore = lag(score, 1),
improveScore = ifelse((score >= lastScore) & (score > 0), 1, 0)
) %>%
ungroup %>%
mutate(
ScoringDate = ymd(ScoringDate),
YearCode = factor(YearCode)
)
# close connection
dbDisconnect(con)
df
source("~/AMINGA/ScoringAnalysis/update_dashboards.R", echo=TRUE)
source("~/AMINGA/ScoringAnalysis/update_dashboards.R", echo=TRUE)
source("~/AMINGA/ScoringAnalysis/update_dashboards.R", echo=TRUE)
source("~/AMINGA/ScoringAnalysis/update_dashboards.R", echo=TRUE)
library(flexdashboard)
library(tidyverse)
library(dbplyr)
library(crosstalk)
library(flexdashboard)
library(DT)
library(htmlwidgets)
library(glue)
library(DBI)
library(lubridate)
options(DT.options = list(
dom = 'Blfrtip',
buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),
lengthMenu = list(c(10,25,50,-1),
c(10,25,50,"All")),
autoWidth = TRUE
)
)
# connections
con <- dbConnect(RSQLite::SQLite(), "../aminga_data.sqlite")
# data
df <- tbl(con, "scoringDailyPT") %>%
dplyr::collect() %>%
filter(Sport == params$Sport, YearCode == params$YearCode, Gender == params$Gender) %>%
mutate(
position1 = ifelse(is.na(position1), 0, position1),
position2 = ifelse(is.na(position2), 0, position2)
) %>%
mutate(score = position1 + position2) %>%
dplyr::select(pk_scoring, Name, Sport, YearCode, Gender, ScoringDate, score) %>%
mutate(ScoringDate = ymd(ScoringDate))
# close connection
dbDisconnect(con)
# shared data
df_shared <- SharedData$new(df)
source("~/AMINGA/ScoringAnalysis/update_dashboards.R", echo=TRUE)
source("~/AMINGA/ScoringAnalysis/update_dashboards.R", echo=TRUE)
library(tidyverse)
library(dbplyr)
library(DT)
library(glue)
library(DBI)
library(ggplot2)
library(plotly)
library(scales)
library(lubridate)
library(readr)
options(dplyr.summarise.inform = FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dbplyr)
library(DT)
library(glue)
library(DBI)
library(ggplot2)
library(plotly)
library(scales)
library(lubridate)
library(readr)
# connections
con <- dbConnect(RSQLite::SQLite(), "../aminga_data.sqlite")
# data
df <- tbl(con, "scoringDailyPT") %>%
dplyr::collect() %>%
mutate(
position1 = ifelse(is.na(position1), 0, position1),
position2 = ifelse(is.na(position2), 0, position2)
) %>%
mutate(score = position1 + position2) %>%
dplyr::select(pk_scoring, Name, Sport, YearCode, Gender, ScoringDate, score) %>%
group_by(Name) %>%
arrange(desc(ScoringDate), .by_group = TRUE) %>%
mutate(
lastScore = lag(score, 1),
improveScore = case_when(
is.na(score) ~ NA,
(score >= lastScore) & (score > 0) ~ 1,
TRUE ~ 0
)
# ifelse((score >= lastScore) & (score > 0), 1, 0)
) %>%
ungroup %>%
mutate(
ScoringDate = ymd(ScoringDate),
YearCode = factor(YearCode)
)
# connections
con <- dbConnect(RSQLite::SQLite(), "../aminga_data.sqlite")
# data
df <- tbl(con, "scoringDailyPT") %>%
dplyr::collect() %>%
mutate(
position1 = ifelse(is.na(position1), 0, position1),
position2 = ifelse(is.na(position2), 0, position2)
) %>%
mutate(score = position1 + position2) %>%
dplyr::select(pk_scoring, Name, Sport, YearCode, Gender, ScoringDate, score) %>%
group_by(Name) %>%
arrange(desc(ScoringDate), .by_group = TRUE) %>%
mutate(
lastScore = lag(score, 1),
improveScore = case_when(
is.na(score) ~ NA,
(score >= lastScore) & (score > 0) ~ 1,
TRUE ~ 0
)
# ifelse((score >= lastScore) & (score > 0), 1, 0)
) %>%
ungroup %>%
mutate(
ScoringDate = ymd(ScoringDate),
YearCode = factor(YearCode)
)
df <- tbl(con, "scoringDailyPT") %>%
dplyr::collect() %>%
mutate(
position1 = ifelse(is.na(position1), 0, position1),
position2 = ifelse(is.na(position2), 0, position2)
) %>%
mutate(score = position1 + position2) %>%
dplyr::select(pk_scoring, Name, Sport, YearCode, Gender, ScoringDate, score) %>%
group_by(Name) %>%
arrange(desc(ScoringDate), .by_group = TRUE)
df
# data
df <- tbl(con, "scoringDailyPT") %>%
dplyr::collect() %>%
mutate(
position1 = ifelse(is.na(position1), 0, position1),
position2 = ifelse(is.na(position2), 0, position2)
) %>%
mutate(score = position1 + position2) %>%
dplyr::select(pk_scoring, Name, Sport, YearCode, Gender, ScoringDate, score) %>%
group_by(Name) %>%
arrange(desc(ScoringDate), .by_group = TRUE) %>%
mutate(
lastScore = lag(score, 1),
improveScore = case_when(
is.na(score)==TRUE ~ NA,
(score >= lastScore) & (score > 0) == TRUE ~ 1,
TRUE ~ 0
)
# ifelse((score >= lastScore) & (score > 0), 1, 0)
) %>%
ungroup %>%
mutate(
ScoringDate = ymd(ScoringDate),
YearCode = factor(YearCode)
)
# data
df <- tbl(con, "scoringDailyPT") %>%
dplyr::collect() %>%
mutate(
position1 = ifelse(is.na(position1), 0, position1),
position2 = ifelse(is.na(position2), 0, position2)
) %>%
mutate(score = position1 + position2) %>%
dplyr::select(pk_scoring, Name, Sport, YearCode, Gender, ScoringDate, score) %>%
group_by(Name) %>%
arrange(desc(ScoringDate), .by_group = TRUE) %>%
mutate(
lastScore = lag(score, 1),
improveScore = ifelse(is.na(lastScore), NA, ifelse(score >= lastScore) & (score > 0), 1, 0)
) %>%
ungroup %>%
mutate(
ScoringDate = ymd(ScoringDate),
YearCode = factor(YearCode)
)
# connections
con <- dbConnect(RSQLite::SQLite(), "../aminga_data.sqlite")
# data
df <- tbl(con, "scoringDailyPT") %>%
dplyr::collect() %>%
mutate(
position1 = ifelse(is.na(position1), 0, position1),
position2 = ifelse(is.na(position2), 0, position2)
) %>%
mutate(score = position1 + position2) %>%
dplyr::select(pk_scoring, Name, Sport, YearCode, Gender, ScoringDate, score) %>%
group_by(Name) %>%
arrange(desc(ScoringDate), .by_group = TRUE) %>%
mutate(
lastScore = lag(score, 1),
improveScore = ifelse(is.na(lastScore), NA, ifelse(score >= lastScore) & (score > 0), 1, 0)
) %>%
ungroup %>%
mutate(
ScoringDate = ymd(ScoringDate),
YearCode = factor(YearCode)
)
# data
df <- tbl(con, "scoringDailyPT") %>%
dplyr::collect() %>%
mutate(
position1 = ifelse(is.na(position1), 0, position1),
position2 = ifelse(is.na(position2), 0, position2)
) %>%
mutate(score = position1 + position2) %>%
dplyr::select(pk_scoring, Name, Sport, YearCode, Gender, ScoringDate, score) %>%
group_by(Name) %>%
arrange(desc(ScoringDate), .by_group = TRUE) %>%
mutate(
lastScore = lag(score, 1),
improveScore = case_when(
is.na(score) ~ NA_integer_,
(score >= lastScore) & (score > 0) ~ 1,
TRUE ~ 0
)
# ifelse(is.na(lastScore), NA, ifelse(score >= lastScore) & (score > 0), 1, 0)
) %>%
ungroup %>%
mutate(
ScoringDate = ymd(ScoringDate),
YearCode = factor(YearCode)
)
# data
df <- tbl(con, "scoringDailyPT") %>%
dplyr::collect() %>%
mutate(
position1 = ifelse(is.na(position1), 0, position1),
position2 = ifelse(is.na(position2), 0, position2)
) %>%
mutate(score = position1 + position2) %>%
dplyr::select(pk_scoring, Name, Sport, YearCode, Gender, ScoringDate, score) %>%
group_by(Name) %>%
arrange(desc(ScoringDate), .by_group = TRUE) %>%
mutate(
lastScore = lag(score, 1),
improveScore = case_when(
is.na(lastScore) ~ NA_integer_,
(score >= lastScore) & (score > 0) ~ 1,
TRUE ~ 0
)
# ifelse(is.na(lastScore), NA, ifelse(score >= lastScore) & (score > 0), 1, 0)
) %>%
ungroup %>%
mutate(
ScoringDate = ymd(ScoringDate),
YearCode = factor(YearCode)
)
df <- tbl(con, "scoringDailyPT") %>%
dplyr::collect() %>%
mutate(
position1 = ifelse(is.na(position1), 0, position1),
position2 = ifelse(is.na(position2), 0, position2)
) %>%
mutate(score = position1 + position2) %>%
dplyr::select(pk_scoring, Name, Sport, YearCode, Gender, ScoringDate, score) %>%
group_by(Name) %>%
arrange(desc(ScoringDate), .by_group = TRUE)
df
df <- tbl(con, "scoringDailyPT") %>%
dplyr::collect() %>%
mutate(
position1 = ifelse(is.na(position1), 0, position1),
position2 = ifelse(is.na(position2), 0, position2)
) %>%
mutate(score = position1 + position2) %>%
dplyr::select(pk_scoring, Name, Sport, YearCode, Gender, ScoringDate, score) %>%
group_by(Name) %>%
arrange(desc(ScoringDate), .by_group = TRUE) %>%
mutate(
lastScore = lag(score, 1),
improveScore = ifelse((score >= lastScore) & (score > 0), 1, 0)
) %>%
ungroup
df
# data
df <- tbl(con, "scoringDailyPT") %>%
dplyr::collect() %>%
mutate(
position1 = ifelse(is.na(position1), 0, position1),
position2 = ifelse(is.na(position2), 0, position2)
) %>%
mutate(score = position1 + position2) %>%
dplyr::select(pk_scoring, Name, Sport, YearCode, Gender, ScoringDate, score) %>%
group_by(Name) %>%
arrange(desc(ScoringDate), .by_group = TRUE) %>%
mutate(
lastScore = lead(score, 1),
improveScore = ifelse((score >= lastScore) & (score > 0), 1, 0)
) %>%
ungroup %>%
mutate(
ScoringDate = ymd(ScoringDate),
YearCode = factor(YearCode)
)
df
plot_df <- df %>%
group_by(Sport, YearCode, Gender, ScoringDate) %>%
summarise(
totalScore = sum(score, na.rm = TRUE),
totalImproveScore = sum(improveScore, na.rm = TRUE)
) %>%
ungroup()
plot <- ggplot(plot_df, aes(x = ScoringDate, y = totalScore, color = YearCode)) +
geom_line() +
geom_point() +
facet_grid(Gender ~ Sport) +
scale_y_continuous("Pontuação total (totalScore)\n") +
scale_x_date("\nEncontro (ScoringDate)") +
scale_color_discrete(name="Ano (YearCode)") +
ggtitle("Pontuações totais para equipes esportivas")
ggplotly(plot)
df
# data
df <- tbl(con, "scoringDailyPT") %>%
dplyr::collect() %>%
mutate(
position1 = ifelse(is.na(position1), 0, position1),
position2 = ifelse(is.na(position2), 0, position2)
) %>%
mutate(score = position1 + position2) %>%
dplyr::select(pk_scoring, Name, Sport, YearCode, Gender, ScoringDate, score) %>%
group_by(Name) %>%
arrange(desc(ScoringDate), .by_group = TRUE) %>%
mutate(
lastScore = lead(score, 1),
improveScore = ifelse((score >= lastScore) & (score > 0), 1, 0)
) %>%
mutate(
improveScore = ifelse(is.na(lastScore), NA, improveScore)
) %>%
ungroup %>%
mutate(
ScoringDate = ymd(ScoringDate),
YearCode = factor(YearCode)
)
df
# close connection
dbDisconnect(con)
source("~/AMINGA/ScoringAnalysis/update_dashboards.R", echo=TRUE)
source("~/AMINGA/ScoringAnalysis/update_dashboards.R", echo=TRUE)
source("~/AMINGA/ScoringAnalysis/update_dashboards.R", echo=TRUE)
# close connection
dbDisconnect(con)
source("~/AMINGA/ScoringAnalysis/update_dashboards.R", echo=TRUE)
# connections
con <- dbConnect(RSQLite::SQLite(), "../aminga_data.sqlite")
null_results <- dbSendQuery(con, statement = read_file("../records_views.sql"))
# close connection
dbDisconnect(con)
setwd(here())
files <- list.files(pattern = "[.]Rmd$")
for (f in files) rmarkdown::render(f)
source("~/AMINGA/ScoringAnalysis/update_dashboards.R", echo=TRUE)
source("~/AMINGA/ScoringAnalysis/update_dashboards.R", echo=TRUE)
source("~/AMINGA/ScoringAnalysis/update_dashboards.R", echo=TRUE)
source("~/AMINGA/ScoringAnalysis/update_dashboards.R", echo=TRUE)
source("~/AMINGA/ScoringAnalysis/update_dashboards.R", echo=TRUE)
source("~/AMINGA/ScoringAnalysis/update_dashboards.R", echo=TRUE)
source("~/AMINGA/ScoringAnalysis/update_dashboards.R", echo=TRUE)
source("~/AMINGA/ScoringAnalysis/update_dashboards.R", echo=TRUE)
source("~/AMINGA/ScoringAnalysis/update_dashboards.R", echo=TRUE)
source("~/AMINGA/ScoringAnalysis/update_dashboards.R", echo=TRUE)
source("~/AMINGA/ScoringAnalysis/update_dashboards.R", echo=TRUE)
source("~/AMINGA/ScoringAnalysis/update_dashboards.R", echo=TRUE)
